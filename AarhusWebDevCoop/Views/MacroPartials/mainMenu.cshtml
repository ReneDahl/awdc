@inherits Umbraco.Web.Macros.PartialViewMacroPage
@using Umbraco.Web

@{
    //Main navigation

    var root = Model.Content.Site();
    var selection = root.Children.Where(x => x.IsVisible()).ToArray();



}

@{
    //Dropdown menu!

IPublishedContent[] projectDropdown =
Model.Content.AncestorOrSelf(1)
.Children()
.Where(x => x.DocumentTypeAlias == "projectsOverview")
.First()
.Children()
.Where(x => x.HasValue("projectStatus") && Umbraco.GetPreValueAsString(x.GetPropertyValue<int>("projectStatus")) == "Completed")
.Where(x => x.IsVisible())
.ToArray();

}


<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <a class="navbar-brand" href="#">@Umbraco.Field("siteTitle", recursive: true)</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">

            <!--The first note comes here, the root element is the first.-->
            <li class="nav-item @(Model.Content.Name == root.Name ? "current" : null)">
                <a class="nav-link" href="@root.Url">@root.Name</a>
            </li>

            @if (selection.Length > 0)
            {


                foreach (var item in selection)
                {
                    <li class="@(item.IsAncestorOrSelf(Model.Content) ? "current": null) nav-item">
                        <a href="@item.Url" class="nav-link">@item.Name</a>
                    </li>
                }


                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Projects
                    </a>
                    <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                        @if (selection.Length > 0)
                        {
                            foreach (var menuItem in projectDropdown.Where("UmbracoNavHide == false"))
                            {
                                var isProtected = umbraco.library.IsProtected(menuItem.Id, menuItem.Path);
                                var loginAccess = isProtected && umbraco.library.HasAccess(menuItem.Id, menuItem.Path);

                                if (!isProtected || loginAccess)
                                {
                                    <a class="dropdown-item" href="@menuItem.Url">@menuItem.Name</a>
                                }


                            }

                        }



                    </div>
                </li>



            }
        </ul>
    </div>


</nav>


